{"version":3,"file":"static/js/93.21f123e2.chunk.js","mappings":"iSAEaA,EAAWC,EAAAA,GAAAA,GAAH,kGAORC,EAAWD,EAAAA,GAAAA,GAAH,qKAGL,qBAAGE,MAAkBC,OAAOC,IAA5B,IAEU,qBAAGF,MAAkBG,UAAUC,OAA/B,IAObC,EAAUP,EAAAA,GAAAA,IAAH,qGAMPQ,EAAYR,EAAAA,GAAAA,IAAH,qG,SCoCtB,EAzDa,WACX,OAAkCS,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,sGAEpBJ,GAAa,GAFO,UAGGK,EAAAA,EAAAA,IAAkBJ,GAHrB,gBAGZK,EAHY,EAGZA,KACRR,EAAaQ,GAJO,gDAMpBC,QAAQC,IAAR,MANoB,yBAQpBR,GAAa,GARO,4EAAH,qDAYrBI,GACD,GAAE,CAACH,KAGF,gCACwB,IAArBJ,EAAUY,QAAiBV,GAG1B,SAACb,EAAD,UACGW,EAAUa,KAAI,SAAAC,GACb,OACE,UAACvB,EAAD,YACE,SAACM,EAAD,CACEkB,IACED,EAAME,aACF,kCAAoCF,EAAME,aAC1C,kHAENC,IAAI,MAEN,UAACnB,EAAD,YACE,0BACE,kCADF,IACiBgB,EAAMI,SAEvB,0BACE,sCADF,IACqBJ,EAAMK,kBAdhBL,EAAMM,UAmBxB,OAxBH,6CA4BF,SAACC,EAAA,EAAD,CAAQC,QAASpB,MAGtB,C,mMC1DDqB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALmB,qCASVC,EAAmB,mCAAG,sGACVH,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,uBACzBG,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,6BAAgCM,GAASL,GADjC,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBG,EAAiB,mCAAG,WAAM1B,GAAN,yFACRmB,EAAAA,EAAAA,IAAA,gBAAmBnB,GAAMoB,GADjB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBnB,EAAiB,mCAAG,WAAMJ,GAAN,yFACRmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,YAAiCoB,GADzB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBI,EAAiB,mCAAG,WAAM3B,GAAN,yFACRmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,YAAiCoB,GADzB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0 0 30px;\n`;\n\nexport const CastItem = styled.li`\n  width: 220px;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.shadow.card};\n\n  transition: transform ${({ theme }) => theme.animation.default};\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const CastImg = styled.img`\n  min-height: 330px;\n  border-radius: 10px 10px 0 0;\n  object-fit: cover;\n`;\n\nexport const CastDescr = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n`;\n","import { Loader } from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'services/movieAPI';\nimport { CastDescr, CastImg, CastItem, CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchMovieCredits(id);\n        setMovieCast(cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieCredits();\n  }, [id]);\n\n  return (\n    <>\n      {movieCast.length === 0 && !isLoading ? (\n        <h2>Cast not found!</h2>\n      ) : (\n        <CastList>\n          {movieCast.map(actor => {\n            return (\n              <CastItem key={actor.credit_id}>\n                <CastImg\n                  src={\n                    actor.profile_path\n                      ? 'https://image.tmdb.org/t/p/w500' + actor.profile_path\n                      : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                  }\n                  alt=\"\"\n                />\n                <CastDescr>\n                  <p>\n                    <b>Actor:</b> {actor.name}\n                  </p>\n                  <p>\n                    <b>Character:</b> {actor.character}\n                  </p>\n                </CastDescr>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n\n      <Loader loading={isLoading} />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nexport const API_KEY = 'b5dbc40d665affe8ed0bac71106b3fa8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n\n  return data;\n};\n\nexport const fetchSearchMovies = async movie => {\n  const { data } = await axios.get(`search/movie?query=${movie}`, params);\n\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`, params);\n\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, params);\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, params);\n\n  return data;\n};\n"],"names":["CastList","styled","CastItem","theme","shadow","card","animation","default","CastImg","CastDescr","useState","movieCast","setMovieCast","isLoading","setIsLoading","id","useParams","useEffect","getMovieCredits","fetchMovieCredits","cast","console","log","length","map","actor","src","profile_path","alt","name","character","credit_id","Loader","loading","axios","params","api_key","fetchTrendingMovies","data","fetchSearchMovies","movie","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}