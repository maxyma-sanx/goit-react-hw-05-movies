{"version":3,"file":"static/js/915.a5db12d0.chunk.js","mappings":"8SAGaA,EAAaC,EAAAA,GAAAA,GAAH,kGAOVC,EAAaD,EAAAA,GAAAA,GAAH,iJAKP,qBAAGE,MAAkBC,OAAOC,IAA5B,IAGHC,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAH,oGAOTO,EAAcP,EAAAA,GAAAA,IAAH,kJASXQ,EAAkBR,EAAAA,GAAAA,IAAH,wD,SCoC5B,EA1De,WACb,OAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,sGAEpBJ,GAAa,GAFO,UAGMK,EAAAA,EAAAA,IAAkBJ,GAHxB,gBAGZK,EAHY,EAGZA,QACRR,EAAeQ,GAJK,gDAMpBC,QAAQC,IAAR,MANoB,yBAQpBR,GAAa,GARO,4EAAH,qDAYrBI,GACD,GAAE,CAACH,KAGF,gCAC0B,IAAvBJ,EAAYY,QAAiBV,GAG5B,SAACb,EAAD,UACGW,EAAYa,KAAI,SAAAC,GACf,OACE,UAACvB,EAAD,YACE,SAACI,EAAD,KACA,UAACE,EAAD,YACE,UAACC,EAAD,YACE,0BACE,iCADF,IACgBgB,EAAOC,eAAeC,SAEtC,0BACE,qCADF,IACoBF,EAAOC,eAAeE,aAE1C,0BACE,mCADF,IACkBH,EAAOC,eAAeG,cAG1C,0BACE,qCADF,IACoBJ,EAAOK,gBAfdL,EAAOV,GAoB3B,OAzBH,+CA6BF,SAACgB,EAAA,EAAD,CAAQC,QAASnB,MAGtB,C,mMCjEDoB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALmB,qCASVC,EAAmB,mCAAG,sGACVH,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,uBACzBG,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,6BAAgCM,GAASL,GADjC,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBG,EAAiB,mCAAG,WAAMzB,GAAN,yFACRkB,EAAAA,EAAAA,IAAA,gBAAmBlB,GAAMmB,GADjB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBI,EAAiB,mCAAG,WAAM1B,GAAN,yFACRkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,YAAiCmB,GADzB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,sDAMjBlB,EAAiB,mCAAG,WAAMJ,GAAN,yFACRkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,YAAiCmB,GADzB,uBACvBG,EADuB,EACvBA,KADuB,kBAGxBA,GAHwB,2CAAH,qD","sources":["components/Review/Review.styled.jsx","components/Review/Review.jsx","services/movieAPI.js"],"sourcesContent":["import { FaUserSecret } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding: 0 0 30px;\n`;\n\nexport const ReviewItem = styled.li`\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  width: 100%;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.shadow.card};\n`;\n\nexport const ReviewImg = styled(FaUserSecret)`\n  align-self: center;\n  height: 150px;\n  width: 150px;\n  padding: 10px;\n`;\n\nexport const ReviewDescr = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n  max-height: 200px;\n  overflow-y: scroll;\n`;\n\nexport const ReviewDescrInfo = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n","import { Loader } from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/movieAPI';\nimport {\n  ReviewDescr,\n  ReviewDescrInfo,\n  ReviewImg,\n  ReviewItem,\n  ReviewList,\n} from './Review.styled';\n\nconst Review = () => {\n  const [movieReview, setMovieReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMovieReviews(id);\n        setMovieReview(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovieCredits();\n  }, [id]);\n\n  return (\n    <>\n      {movieReview.length === 0 && !isLoading ? (\n        <h3>Review not found!</h3>\n      ) : (\n        <ReviewList>\n          {movieReview.map(review => {\n            return (\n              <ReviewItem key={review.id}>\n                <ReviewImg />\n                <ReviewDescr>\n                  <ReviewDescrInfo>\n                    <p>\n                      <b>Name:</b> {review.author_details.name}\n                    </p>\n                    <p>\n                      <b>Username:</b> {review.author_details.username}\n                    </p>\n                    <p>\n                      <b>Rating:</b> {review.author_details.rating}\n                    </p>\n                  </ReviewDescrInfo>\n                  <p>\n                    <b>Overview:</b> {review.content}\n                  </p>\n                </ReviewDescr>\n              </ReviewItem>\n            );\n          })}\n        </ReviewList>\n      )}\n\n      <Loader loading={isLoading} />\n    </>\n  );\n};\n\nexport default Review;\n","import axios from 'axios';\n\nexport const API_KEY = 'b5dbc40d665affe8ed0bac71106b3fa8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n\n  return data;\n};\n\nexport const fetchSearchMovies = async movie => {\n  const { data } = await axios.get(`search/movie?query=${movie}`, params);\n\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}`, params);\n\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, params);\n\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, params);\n\n  return data;\n};\n"],"names":["ReviewList","styled","ReviewItem","theme","shadow","card","ReviewImg","FaUserSecret","ReviewDescr","ReviewDescrInfo","useState","movieReview","setMovieReview","isLoading","setIsLoading","id","useParams","useEffect","getMovieCredits","fetchMovieReviews","results","console","log","length","map","review","author_details","name","username","rating","content","Loader","loading","axios","params","api_key","fetchTrendingMovies","data","fetchSearchMovies","movie","fetchMovieDetails","fetchMovieCredits"],"sourceRoot":""}